name: "Create VyOS OCI image"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # VYOS_BUILD_DOCKER_IMAGE: ${{ github.repository_owner }}/vyos-build

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set VyOS version
        run: echo "VYOS_VERSION=$(cat vyos-version)" >> $GITHUB_ENV

      - name: Checkout vyos-build
        uses: actions/checkout@v3
        with:
          repository: vyos/vyos-build
          ref: ${{ env.VYOS_VERSION }}
          path: build

      - name: Checkout vyos-vm-images
        uses: actions/checkout@v3
        with:
          repository: vyos/vyos-vm-images
          path: vm-images

      - name: Set gosu UID/GID
        run: |
          echo "GOSU_UID=$(id -u)" >> $GITHUB_ENV
          echo "GOSU_GID=$(id -g)" >> $GITHUB_ENV

      - name: Run the build process with Docker
        run: >
          docker run --rm
          -v ${{ github.workspace }}/build:/vyos
          -w /vyos
          --privileged
          --sysctl net.ipv6.conf.lo.disable_ipv6=0
          -e GOSU_UID
          -e GOSU_GID
          vyos/vyos-build:${{ env.VYOS_VERSION }} bash /vyos/scripts/build.sh
      
      # Steps for building the container ourselves
      # - name: Gather Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.VYOS_BUILD_DOCKER_IMAGE }}
      #     tags: |
      #       type=raw,value=latest,priority=600,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
      #       type=raw,value=${{ env.VYOS_VERSION }},priority=600
      #       type=sha,enable=true,priority=100,prefix=,suffix=,format=long
      #     flavor: |
      #       latest=false
      
      # - name: Log in to the Container registry
      #   if: ${{ github.event_name != 'pull_request' }}
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      
      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: build/docker
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}